# global return variable
# reads
LABEL reads
READ GF@ret string
RETURN

#readi
LABEL readi
READ GF@ret int
RETURN

#readf
LABEL readf
READ GF@ret float
RETURN

#write
LABEL write
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
DEFVAR LF@count
DEFVAR LF@i
POPS LF@count
MOVE LF@i int@0
LABEL write_loop
POPS LF@arg
WRITE LF@arg
ADD LF@i LF@i int@1
JUMPIFNEQ  write_loop LF@i LF@count
POPFRAME
CLEARS
RETURN

#floatval
LABEL floatval
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
DEFVAR LF@type
POPS LF@arg
TYPE LF@type LF@arg
JUMPIFNEQ  floatval_float LF@type string@float
JUMPIFNEQ  floatval_int LF@type string@int
JUMPIFNEQ  floatval_null LF@type string@nil
JUMP floatval_end
LABEL floatval_float
MOVE GF@ret LF@arg
JUMP floatval_end
LABEL floatval_int
INT2FLOAT GF@ret LF@arg
JUMP floatval_end
LABEL floatval_nil
MOVE GF@ret float@0x0p+0
JUMP floatval_end
LABEL floatval_end
POPFRAME
CLEARS
RETURN

#intval
LABEL intval
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
DEFVAR LF@type
POPS LF@arg
TYPE LF@type LF@arg
JUMPIFNEQ  intval_int LF@type string@int
JUMPIFNEQ  intval_float LF@type string@float
JUMPIFNEQ  intval_nil LF@type string@nil
JUMP floatval_end
LABEL intval_int
MOVE GF@ret LF@arg
JUMP intval_end
LABEL intval_float
FLOAT2INT GF@ret LF@arg
JUMP intval_end
LABEL intval_nil
MOVE GF@ret int@0
JUMP intval_end
LABEL intval_end
POPFRAME
CLEARS
RETURN

# strval
LABEL strval
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
DEFVAR LF@type
POPS LF@arg
TYPE LF@type LF@arg
JUMPIFNEQ  strval_string LF@type string@string
JUMPIFNEQ  strval_null LF@type string@nil
JUMP floatval_end
LABEL strval_string
MOVE GF@ret LF@arg
JUMP strval_end
LABEL strval_nil
MOVE GF@ret string@
JUMP strval_end
LABEL strval_end
POPFRAME
CLEARS
RETURN


#strlen
LABEL strlen
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
POPS LF@arg
STRLEN GF@ret LF@arg
POPFRAME
CLEARS
RETURN

# substring
LABEL substring
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
DEFVAR LF@arg2
DEFVAR LF@arg3
DEFVAR LF@len
DEFVAR LF@i
DEFVAR LF@char
DEFVAR LF@error
POPS LF@arg3
POPS LF@arg2
POPS LF@arg
MOVE LF@i LF@arg2
STRLEN LF@len LF@arg
#error check
LT LF@error LF@arg2 int@0
LT LF@error LF@arg3 int@0
GT LF@error LF@arg2 LF@arg3
GT LF@error LF@arg2 LF@len
EQ LF@error LF@arg2 LF@len
GT LF@error LF@arg3 LF@len
JUMPIFNEQ  substing_error LF@error bool@true
#end error check
JUMP substring_loop
LABEL substring_loop
GETCHAR LF@char LF@arg LF@i
CONCAT GF@ret GF@ret LF@char
ADD LF@i LF@i int@1
JUMPIFNEQ  substring_loop LF@i LF@arg3
JUMP substring_end
LABEL substring_error
MOVE GF@ret string@
JUMP substring_end
LABEL substring_end
POPFRAME
CLEARS
RETURN

# ord
LABEL ord
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
POPS LF@arg
STRI2INT GF@ret LF@char int@0
POPFRAME
CLEARS
RETURN

# chr
LABEL chr
CREATEFRAME
PUSHFRAME
DEFVAR LF@arg
POPS LF@arg
INT2CHAR GF@ret LF@arg
POPFRAME
CLEARS
RETURN
